{
	"name": "df_emp and dept join",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emp_data",
						"type": "DatasetReference"
					},
					"name": "Employee"
				},
				{
					"dataset": {
						"referenceName": "ds_dept_data",
						"type": "DatasetReference"
					},
					"name": "dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_empanddept",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "empanddeptdata"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dept",
				"Employee, dept join(Column_4 == dept@Column_1,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> empanddeptdata",
				"empanddeptdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Column_1 = Employee@Column_1,",
				"          Column_2 = Employee@Column_2,",
				"          Column_3,",
				"          Column_2 = dept@Column_2",
				"     )) ~> sink1"
			]
		}
	}
}